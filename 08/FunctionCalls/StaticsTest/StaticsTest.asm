//init
@256
D=A
@SP
M=D
//call Sys.init 0
@null$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(null$ret.0)
//function Class1.set 0
(Class1.set)
// C_PUSH argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 0
@SP
AM=M-1
D=M
@Class1.0
M=D
// C_PUSH argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 1
@SP
AM=M-1
D=M
@Class1.1
M=D
// C_PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@Class1.set.frame
M=D
@5
A=D-A
D=M
@Class1.set.ret
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@Class1.set.frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@Class1.set.frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@Class1.set.frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@Class1.set.frame
A=M-D
D=M
@LCL
M=D
@Class1.set.ret
A=M
0;JMP
//function Class1.get 0
(Class1.get)
// C_PUSH static 0
@Class1.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH static 1
@Class1.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@LCL
D=M
@Class1.get.frame
M=D
@5
A=D-A
D=M
@Class1.get.ret
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@Class1.get.frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@Class1.get.frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@Class1.get.frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@Class1.get.frame
A=M-D
D=M
@LCL
M=D
@Class1.get.ret
A=M
0;JMP
//function Class2.set 0
(Class2.set)
// C_PUSH argument 0
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 0
@SP
AM=M-1
D=M
@Class2.0
M=D
// C_PUSH argument 1
@ARG
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 1
@SP
AM=M-1
D=M
@Class2.1
M=D
// C_PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@Class2.set.frame
M=D
@5
A=D-A
D=M
@Class2.set.ret
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@Class2.set.frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@Class2.set.frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@Class2.set.frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@Class2.set.frame
A=M-D
D=M
@LCL
M=D
@Class2.set.ret
A=M
0;JMP
//function Class2.get 0
(Class2.get)
// C_PUSH static 0
@Class2.0
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH static 1
@Class2.1
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//return
@LCL
D=M
@Class2.get.frame
M=D
@5
A=D-A
D=M
@Class2.get.ret
M=D
@ARG
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@1
D=A
@Class2.get.frame
A=M-D
D=M
@THAT
M=D
@2
D=A
@Class2.get.frame
A=M-D
D=M
@THIS
M=D
@3
D=A
@Class2.get.frame
A=M-D
D=M
@ARG
M=D
@4
D=A
@Class2.get.frame
A=M-D
D=M
@LCL
M=D
@Class2.get.ret
A=M
0;JMP
//function Sys.init 0
(Sys.init)
// C_PUSH constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
@Sys.init$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Sys.init$ret.0)
// C_POP temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// C_PUSH constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Sys.init$ret.1)
// C_POP temp 0
@R5
D=A
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
//call Class1.get 0
@Sys.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Sys.init$ret.2)
//call Class2.get 0
@Sys.init$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Sys.init$ret.3)
//label WHILE
(Sys.init$WHILE)
//goto WHILE
@Sys.init$WHILE
0;JMP
